name: Java CI with Maven

on:
  push:
    branches: [ "main", "test" ]
  pull_request:
    branches: [ "main", "test" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 

    - name: Create RDS instance
      run: |
        aws rds create-db-instance \
          --db-instance-identifier mydbinstance \
          --db-instance-class db.t3.micro \
          --engine postgres \
          --master-username saayam_ci \
          --master-user-password ${{ secrets.DB_PASSWORD }} \
          --allocated-storage 20 \
          --db-name saayam_db \
          --vpc-security-group-ids sg-0837f94e8dda4c6cb  # Use your security group
        aws rds wait db-instance-available --db-instance-identifier mydbinstance
    - name: Get RDS endpoint
      id: get-db-endpoint
      run: |
        DB_ENDPOINT=$(aws rds describe-db-instances --db-instance-identifier mydbinstance --query 'DBInstances[0].Endpoint.Address' --output text)
        echo "DB_ENDPOINT=${DB_ENDPOINT}" >> $GITHUB_ENV
    - name: Update application properties
      run: |
        echo "spring.datasource.url=jdbc:postgresql://${DB_ENDPOINT}:5432/saayam_db" > src/main/resources/application.properties
        echo "spring.datasource.username=saayam_ci" >> src/main/resources/application.properties
        echo "spring.datasource.password=${{ secrets.DB_PASSWORD }}" >> src/main/resources/application.properties
    
    - name: Set up JDK 17 
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - uses: actions/upload-artifact@v3.2.1-node20
      with:
        name: code-coverage
        path: target/jacoco-ut

    # - name: Upload code coverage to Codecov
    #   uses: codecov/codecov-action@v4.5.0
    #   with:
    #     fail_ci_if_error: true
    #     files: target/jacoco-ut/jacoco.xml 
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     verbose: true
        
    - name: Delete RDS instance
      if: always()  # Ensure RDS instance is deleted even if the build fails
      run: |
        aws rds delete-db-instance --db-instance-identifier mydbinstance --skip-final-snapshot
        aws rds wait db-instance-deleted --db-instance-identifier mydbinstance
